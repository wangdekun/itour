'use strict';

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * CrumbItem Component for uxcore
 * @author peijie.dpj
 *
 * Copyright 2014-2015, Uxcore Team, Alinw.
 * All rights reserved.
 */

var classnames = require('classnames');
var React = require('react');

var CrumbItem = function (_React$Component) {
  _inherits(CrumbItem, _React$Component);

  function CrumbItem(props) {
    _classCallCheck(this, CrumbItem);

    return _possibleConstructorReturn(this, _React$Component.call(this, props));
  }

  CrumbItem.prototype.render = function render() {
    var props = _objectWithoutProperties(this.props, []);

    if (props.onClick) {
      props.href = "javascript:void(0);";
    }
    return props.href ? React.createElement(
      'a',
      props,
      props.children
    ) : React.createElement(
      'span',
      props,
      props.children
    );
  };

  return CrumbItem;
}(React.Component);

CrumbItem.defaultProps = {
  children: '链接'
};

// http://facebook.github.io/react/docs/reusable-components.html
CrumbItem.propTypes = {
  /**
   * @title 链接
   */
  href: React.PropTypes.string,
  /**
   * @title 类名
   * @veIgnore
   */
  className: React.PropTypes.string,
  /**
   * @title 文案
   */
  children: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.element]),
  /**
   * @title 点击事件
   * @veIgnore
   */
  onClick: React.PropTypes.func
};

CrumbItem.displayName = 'CrumbItem';

module.exports = CrumbItem;