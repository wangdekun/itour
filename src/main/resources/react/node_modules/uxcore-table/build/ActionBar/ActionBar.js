'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _uxcoreButton = require('uxcore-button');

var _uxcoreButton2 = _interopRequireDefault(_uxcoreButton);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SearchBar = require('./SearchBar');

var _SearchBar2 = _interopRequireDefault(_SearchBar);

var _ColumnPicker = require('./ColumnPicker');

var _ColumnPicker2 = _interopRequireDefault(_ColumnPicker);

var _LinkBar = require('./LinkBar');

var _LinkBar2 = _interopRequireDefault(_LinkBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Grid Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author zhouquan.yezq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2015, UXCore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var ActionBar = function (_React$Component) {
  _inherits(ActionBar, _React$Component);

  function ActionBar() {
    _classCallCheck(this, ActionBar);

    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));
  }

  /**
   *  convert ActionBar config from hash to array
   */
  ActionBar.prototype.getActionItem = function getActionItem(config) {
    var items = [];
    if (config instanceof Array) {
      items = config;
    } else if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {
      Object.keys(config).forEach(function (item) {
        items.push({
          title: item,
          callback: config[item]
        });
      });
    }
    return items;
  };

  ActionBar.prototype.handleSearch = function handleSearch(value) {
    this.props.onSearch(value);
  };

  ActionBar.prototype.renderActionBtn = function renderActionBtn(item, index) {
    var me = this;
    var itemProps = {
      className: me.props.prefixCls + '-item',
      onClick: item.callback || function () {},
      type: 'secondary',
      key: index
    };
    if (!!item.render && typeof item.render === 'function') {
      return _react2["default"].createElement(
        'div',
        itemProps,
        item.render(item.title)
      );
    }
    if (index === 0) {
      itemProps.type = 'outline';
    }
    return _react2["default"].createElement(
      _uxcoreButton2["default"],
      _extends({
        size: 'medium',
        disabled: item.disabled || false
      }, itemProps),
      item.title
    );
  };

  ActionBar.prototype.renderLinkBar = function renderLinkBar() {
    var me = this;
    var linkBar = me.props.linkBar;

    return _react2["default"].createElement(_LinkBar2["default"], { config: linkBar });
  };

  ActionBar.prototype.renderSearchBar = function renderSearchBar() {
    if (this.props.showSearch) {
      var me = this;
      var searchBarProps = {
        onSearch: me.handleSearch.bind(me),
        key: 'searchbar',
        placeholder: me.props.searchBarPlaceholder
      };
      return _react2["default"].createElement(_SearchBar2["default"], searchBarProps);
    }
    return null;
  };

  ActionBar.prototype.renderColumnPicker = function renderColumnPicker() {
    var me = this;
    var _me$props = me.props,
        showColumnPicker = _me$props.showColumnPicker,
        columns = _me$props.columns,
        handleColumnPickerChange = _me$props.handleColumnPickerChange,
        checkboxColumnKey = _me$props.checkboxColumnKey,
        width = _me$props.width,
        locale = _me$props.locale;

    if (!showColumnPicker) {
      return null;
    }
    return _react2["default"].createElement(_ColumnPicker2["default"], {
      columns: columns,
      locale: locale,
      dropdownMaxWidth: width,
      checkboxColumnKey: checkboxColumnKey,
      handleColumnPickerChange: handleColumnPickerChange
    });
  };

  ActionBar.prototype.render = function render() {
    var _classnames;

    var me = this;
    var props = me.props;
    var barConfig = props.actionBarConfig;

    return _react2["default"].createElement(
      'div',
      {
        className: (0, _classnames3["default"])((_classnames = {}, _defineProperty(_classnames, props.prefixCls, !!props.prefixCls), _defineProperty(_classnames, 'fn-clear', true), _classnames))
      },
      me.getActionItem(barConfig).map(function (item, index) {
        return me.renderActionBtn(item, index);
      }),
      me.renderSearchBar(),
      me.renderColumnPicker(),
      me.renderLinkBar()
    );
  };

  return ActionBar;
}(_react2["default"].Component);

ActionBar.propTypes = {
  showSearch: _propTypes2["default"].bool,
  onSearch: _propTypes2["default"].func,
  prefixCls: _propTypes2["default"].string
};

ActionBar.defaultProps = {
  prefixCls: 'kuma-uxtable-actionbar'
};

exports["default"] = ActionBar;
module.exports = exports['default'];